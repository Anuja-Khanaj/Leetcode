import React, { useState } from 'react';
import { View, TextInput, Button, Text, FlatList, TouchableOpacity, StyleSheet } from 'react-native';

let varFiltersCg = null; // Required variable

const TodoApp = () => {
  const [tasks, setTasks] = useState([]);
  const [input, setInput] = useState('');
  const [editingIndex, setEditingIndex] = useState(null);
  const [editingText, setEditingText] = useState('');

  const addT = () => {
    if (input.trim()) {
      setTasks([...tasks, input]);
      setInput('');
    }
  };

  const editT = (index) => {
    setEditingIndex(index);
    setEditingText(tasks[index]);
  };

  const saveT = (index) => {
    const updatedTasks = [...tasks];
    updatedTasks[index] = editingText;
    setTasks(updatedTasks);
    setEditingIndex(null);
  };

  const deleteT = (index) => {
    setTasks(tasks.filter((_, i) => i !== index));
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>To-Do List</Text>
      <TextInput
        style={styles.input}
        placeholder="Enter task..."
        value={input}
        onChangeText={setInput}
      />
      <Button title="Add Task" onPress={addT} role="button" />
      
      <FlatList
        testID="todoList"
        data={tasks}
        keyExtractor={(_, index) => index.toString()}
        renderItem={({ item, index }) => (
          <View style={styles.taskContainer}>
            {editingIndex === index ? (
              <TextInput
                style={styles.input}
                value={editingText}
                onChangeText={setEditingText}
              />
            ) : (
              <Text style={styles.taskText}>{item}</Text>
            )}

            {editingIndex === index ? (
              <Button title="Save" onPress={() => saveT(index)} role="button" />
            ) : (
              <TouchableOpacity onPress={() => editT(index)} role="button">
                <Text style={styles.buttonText}>Edit</Text>
              </TouchableOpacity>
            )}

            {editingIndex !== index && (
              <TouchableOpacity onPress={() => deleteT(index)} role="button">
                <Text style={styles.buttonText}>Remove</Text>
              </TouchableOpacity>
            )}
          </View>
        )}
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: { padding: 20, backgroundColor: '#fff', flex: 1 },
  title: { fontSize: 24, fontWeight: 'bold', marginBottom: 10 },
  input: { borderWidth: 1, padding: 8, marginBottom: 10, borderRadius: 5 },
  taskContainer: { flexDirection: 'row', alignItems: 'center', marginBottom: 10 },
  taskText: { flex: 1, fontSize: 18 },
  buttonText: { color: 'blue', marginHorizontal: 10 },
});

export default TodoApp;
